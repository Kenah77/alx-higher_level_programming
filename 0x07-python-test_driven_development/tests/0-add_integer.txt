A test to for the add_integer function

Import the module
>>> import sys
>>> sys.path.insert(1, '../')
>>> lib = __import__("0-add_integer")
>>> add_integer = lib.add_integer

#Normal addition test
>>> add_integer(1)
99
>>> add_integer(-5)
93
>>> add_integer(20.5)
118

#Type Errors
>>> add_integer(1+5j)
Traceback (most recent call last):
...
TypeError: a must be an integer
>>> add_integer([])
Traceback (most recent call last):
...
TypeError: a must be an integer
>>> add_integer({})
Traceback (most recent call last):
...
TypeError: a must be an integer
>>> add_integer(tuple())
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> add_integer("")
Traceback (most recent call last):
...
TypeError: a must be an integer


#Two input additions
>>> add_integer(10, 10)
20
>>> add_integer(10.5, 10.5)
20

#Two input addition type errors
>>> add_integer(20, 10+5j)
Traceback (most recent call last):
...
TypeError: b must be an integer
>>> add_integer(50, [])
Traceback (most recent call last):
...
TypeError: b must be an integer
>>> add_integer(100, {})
Traceback (most recent call last):
...
TypeError: b must be an integer
>>> add_integer(5, set())
Traceback (most recent call last):
...
TypeError: b must be an integer

>>> add_integer(1, "")
Traceback (most recent call last):
...
TypeError: b must be an integer
